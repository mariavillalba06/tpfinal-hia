version: '3.8'

services:
  frontend:
    build:
      context: ./client/final-project  # Asegúrate de que esta ruta sea correcta
    #container_name: contenedor-frontend
    #image: mariavillalba/client-final-project2:latest
    ports:
      - "4200:4200"  # Asegúrate de mapear correctamente el puerto 4200
    networks:
      - red-clinica

  backend:
    build:
      context: ./server
      #container_name: contenedor-backend
      #image: mariavillalba/server:latest
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo-primary:27017,mongo-secondary:27017/final-project-db?replicaSet=rs0
    depends_on:
      - mongo-primary
    networks:
      - red-clinica
    ports:
      - "3000:3000"

  mongo-primary:
    image: mongo:latest
    container_name: mongo-primary
    #command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    entrypoint: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo-primary"]
    volumes:
      - mongo-primary-data:/data/db
    networks:
      - red-clinica
  
  mongo-secondary:
    image: mongo:latest
    container_name: mongo-secondary
    ports:
      - 27018:27017
    entrypoint: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo-secondary"]
    #command: mongod --replSet rs0 --bind_ip_all
    networks:
     - red-clinica
    volumes:
     - mongo-secondary-data:/data/db

  mongosetup:
    image: mongo:latest
    depends_on:
      - mongo-primary
      - mongo-secondary
    volumes:
      - ./scripts:/scripts
    restart: "no"
    entrypoint: [ "bash", "/scripts/mongo_setup.sh" ]
    networks:
     - red-clinica
  
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-primary 
      ME_CONFIG_MONGODB_REPLSET_NAME: rs0 
      ME_CONFIG_BASICAUTH_USERNAME: admin 
      ME_CONFIG_BASICAUTH_PASSWORD: admin123 
    ports:
      - "8081:8081"
    networks:
      - red-clinica
    depends_on:
      - mongo-primary
      - mongo-secondary
  
  mongo-backup:
    image: mongo:latest
    container_name: mongo-backup
    command: >
      bash -c "
        until mongosh --host mongo-primary:27017 --eval 'print(\"waiting for connection...\")'; do
          sleep 2;
        done &&
        mongodump --host mongo-primary:27017 --out /backup"
    volumes:
      - mongo-backup-data:/backup
    networks:
      - red-clinica
    depends_on:
      - mongo-primary
      - mongosetup

networks:
  red-clinica:

volumes:
  mongo-primary-data:
    driver: local
  mongo-secondary-data:
    driver: local
  mongo-backup-data:
    driver: local
  